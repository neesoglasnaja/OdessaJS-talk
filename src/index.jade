include ./blocks/slide.jade
include ./blocks/cover.jade
include ./blocks/quote.jade
include ./blocks/frame.jade

- var title = "Как внедрить стандарты разработки, чтобы никто не пострадал"

doctype html
html(lang='ru')
  head
    title !{title}
    meta(charset='utf-8')
    meta(http-equiv='x-ua-compatible', content='ie=edge')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='stylesheet', href='shower/themes/ribbon/styles/screen-16x10.css')
    link(rel='stylesheet', href='theme.css')
    link(rel='stylesheet', href='slides.css')
    link(rel='stylesheet', href='highlight/styles/github.css')
  body.shower.list
    header.caption
      h1 !{title}
    +slide({name: 'cover', header: title, classes:'cover'})
      p Александра Шинкевич (
        a(href='https://twitter.com/neesoglasnaja' target="_blank") @neesoglasnaja
        | )
      img.cover(src='pictures/bat-signal.jpg')
    +slide({header: "Кто я?", classes: "label-header right black"})
      ul
        li Глава отдела фронтенда, LOVATA
        li Full-stack Node.js разработчик
      p
        img.logo(src="pictures/minskcss.png")
        img.logo(src="pictures/minskjs.png")
        img.logo.css-m-js(src="pictures/css-minsk-js.svg")
      img.cover.height(src='pictures/bg-blur.jpg')
      img.cover.place.left(src='pictures/about-cover.jpg')
    +slide({header: "О чем буду говорить?", classes: "label-header black"})
      ul
        li Как унифицировать codestyle (HTML, CSS, JS)
        li Как автоматизировать его проверку
        li Как внедрить проверку в CI
      img.place.right.cover.height(src='pictures/cave-angle.png')
    +slide({header: "", classes: "black label-header clear"})
      img.cover.width(src="pictures/batman_vs_superman.jpg")
      h2.place.bottom Guidelines&nbsp;&nbsp;&nbsp;VS&nbsp;&nbsp;&nbsp;Styleguide
    +slide({header: "Guidelines", classes: "label-header"})
      img(src='pictures/blackberry_guideline.jpg', style='width: 116%; margin-left: -8%;')
    +slide({header: "Guidelines", classes: "label-header"})
      ul
        li Набор стандартов и инструкций по использованию фирменного стиля
          ul
            li.next Применение логотипов, знаков
            li.next Шрифты
            li.next Цвета
            li.next Правильное размещение на носителях
        li.next Самостоятельный документ
    +slide({header: "Styleguide", classes: "label-header"})
      img.cover.width(src='../pictures/styleguide.jpg')
    +slide({header: "Styleguide", classes: "label-header"})
      ul
        li Коллекция предварительно созданных элементов и правил
        li.next В идеале — интерактивность
        li.next Может содержать код
      footer
        p Но они просто так никому не нужны
        p Это скорее про то, каким должен быть интерфейс, а не код
    +slide({header: "React Styleguidist", classes: "label-header"})
      img(src='../pictures/styleguidist-button.jpg', style='width: 90%;')
      footer
        p В первый день будет выступать Хеннинг Музцынски, у него как раз доклад про Styleguidist, будет красивая отсылка ;)
    +slide({header: "codestyle", classes: ""})
      p codestyle - правила, по которым надо писать код
      footer
        p Но и он никому не нужен (на самом деле)
    +slide({header: "", classes: ""})
      p linters - автоматическая проверка
    +slide({header: "", classes: ""})
      ul
        li Правила хранятся в репозитории проекта
        li Они внедрены в процесс сборки
        li Ошибки видно в редакторе
        li Невалидный код не попадает в общую кодовую базу
    +slide({header: "С чего начать?", classes: ""})
      p С настройки редактора
      img.place.right(src='pictures/mechanic.jpg', height="100%")
      img.place.right.next(src='pictures/editorconfig-logo.png', style='width: 420px; top: 159px; right: 80px;')
    +slide({header: ".editorconfig", classes: ""})
      ul
        li Единый формат настроек для всех IDE
        li Конец войны "табы или пробелы"
        li Разные настройки для разных файлов
    +slide({header: "", classes: "clear"})
      h2.shout.faded.next Из коробки
      img.cover.height(src='pictures/bg-blur.jpg')
      +cover('pictures/editorconfig-native.png')
    +slide({header: "", classes: "clear"})
      h2.shout.faded.next Есть плагин
      img.cover.height(src='pictures/bg-blur.jpg')
      +cover('pictures/editorconfig-plugin.png')
    +slide({header: "Формат .editorconfig", classes: ""})
      pre
        code
          | # comment
          | root = true
          | [*]
          | end_of_line = lf
          | insert_final_newline = true
          | charset = utf-8
          | indent_style = space
          | indent_size = 4
          | &nbsp;
          | [*.{md,jade}]
          | indent_style = tab
    +slide({header: "", classes: ""})
      img.cover.height(src='pictures/bg-blur.jpg')
      div.place
        p.center
          img(src='pictures/htmlhint.png')
        p.center
          a.link.link-github(href='https://github.com/yaniswang/HTMLHint') yaniswang/HTMLHint
    +slide({header: "", classes: ""})
      p Правила
    +slide({header: "", classes: ""})
      .terminal(data-content='HTMLHint')
        p npm install htmlhint -g
      br
      pre
        code.hljs
          |{
          |    "tagname-lowercase": true,
          |    "attr-lowercase": true,
          |    "attr-value-double-quotes": true,
          |    "doctype-first": true,
          |    "tag-pair": true,
          |    "spec-char-escape": true,
          |    "id-unique": true,
          |    "src-not-empty": true,
          |    "attr-no-duplication": true,
          |    "title-require": true
          |}
    +slide({header: "", classes: ""})
      p Установка
      p Конфигурация
    +slide({header: "", classes: ""})
      p В сборке htmlhint-loader
    +slide({header: "", classes: ""})
      p htmllint / html-lint валидация html5
      p pug-lint
    +slide({header: "CSS", classes: ""})
      p Stylelint
    +slide({header: "", classes: ""})
      p Правила
    +slide({header: "", classes: ""})
      p Установка
      p Конфигурация
    +slide({header: "", classes: ""})
      p Редакторы
    +slide({header: "", classes: ""})
      p В сборке stylelint-loader
    +slide({header: "", classes: ""})
      p sass-lint / stylelint-scss
      p lesshint
      p Stylint
      p stylelint-selector-bem-pattern
    +slide({header: "Порядок написания атрибутов", classes: ""})
      p http://csscomb.com/
    +slide({header: "", classes: ""})
      p Правила
      p Установка
      p Конфигурация
    +slide({header: "", classes: ""})
      p Редакторы
    +slide({header: "Генерация style guides", classes: ""})
      p https://github.com/davidhund/styleguide-generators#css-parsing-css-source
    +slide({header: "JS", classes: ""})
      p ESLint
    +slide({header: "", classes: ""})
      p Правила
      p Установка
      p Конфигурация
    +slide({header: "", classes: ""})
      p Редакторы
    +slide({header: "", classes: ""})
      p В сборке eslint-loader
    +slide({header: "StandardJS", classes: ""})
    +slide({header: "Airbnb", classes: ""})
    +slide({header: "", classes: ""})
      p babel-eslint
      p tslint
      p eslint-plugin-flowtype
    +slide({header: "", classes: ""})
      p http://usejsdoc.org/
    +slide({header: "Форматирование", classes: ""})
      p prettier
    +slide({header: "Запрещаем коммитить плохой код", classes: ""})
      p pre-commit
    +slide({header: "", classes: ""})
      p Установка
      p Конфигурация
    +slide({header: "Работа с git", classes: ""})
      p Git flow - как ветвиться
    +slide({header: '', classes: 'clear black'})
      img.cover.height(src='pictures/git-flow-meme.jpg')
    +slide({header: '', classes: 'clear'})
      img.cover.height(src='pictures/git-flow.png')
    +slide({header: "", classes: ""})
      p поначалу все хорошо, все хотят их внедрить, с нетерпением ждут...
    +slide({header: "Проблема 1. Сборка падает из-за слишком строгих правил", classes: ""})
      p Решение - даунгрейдить в сборке "мешаюшие" свойства на warn
      ul
        li Создаем еще 1 файл конфига .dev.eslintrc
        li В нем extend от существующего конфига
        li Добавляем правила с уровнем warn
        li В webpack по ключу ENV подключаем нужный конфиг
    +slide({header: "Проблема 2. Плохой код попадает в репозиторий", classes: ""})
      p Решение - делать проверки в CI
      p Bitbucket - Pipelines
      p Github - TravisCI
      p GitLab -
    +slide({header: "Подводя итог", classes: ""})
      ul
        li Настроить редактор
        li Линтеры
        li Документация
        li Git hooks
        li CI
    +slide({header: "Материалы по теме", classes: ""})
      ul
        li
          a(href='https://www.youtube.com/watch?v=HZF3XRNOpGo') Кодстайл и насилие — Антон Немцев
        li
          a(href='https://www.youtube.com/watch?v=jcTD-zpY5RM') Как оптимизировать фронтенд — Мария Кабаш
    +slide({name: 'theend', header: "Вопросы?", shout: true, classes: 'cover label-header'})
      p.end-link
        a.bigger(href="http://bit.ly/" target="_blank") bit.ly/
        br
        | Александра Шинкевич (
        a(href='https://twitter.com/neesoglasnaja' target="_blank") @neesoglasnaja
        | )
      +cover('pictures/blur-cover.jpg')

    .progress
    script(src='shower/shower.min.js')
    script(src='highlight/highlight.pack.js')

    script(type='text/javascript') hljs.initHighlightingOnLoad();
